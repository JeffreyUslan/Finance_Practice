plot.df2$x=nrow(plot.df2)-plot.df2$x+1
Smoothed_plot=ggplot(plot.df2)+theme_bw()+
geom_line(aes(x=x,y=sim_data))+
geom_line(aes(x=x,y=clean),color="blue",size=1.5)+
ylab("Simulated Data")+xlab("Time")
Smoothed_plot
acf(fin_data$Open)
acf(lm_fit$residuals)
acf(diff(fin_data$Open))
pacf(diff(fin_data$Open))
stl_obj=stl(ts(fin_data$Open, frequency = 12),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
arima_model=arima(fin_data$Open)
summary(arima_model)
acf(arima_model)
str(arima_model)
plot(arima_model)
?forecast
library(forecast)
forecast(arima_model)
plot(forecast(arima_model))
acf(fin_data$Open)
pacf(fin_data$Open)
acf(diff(fin_data$Open))
?arima
arima_model=arima(fin_data$Open,order=c(4,4,1))
summary(arima_model)
?auto.arima
arima_model=auto.arima(fin_data$Open)
library(forecast)
install.packages("forecast")
library(forecast)
install.github("robjhyndman/forecast")
install.packages("forecast",lib="c:/users/public",
repos="http://cran.ms.unimelb.edu.au/",dependencies=TRUE)
library(forecast)
install.packages("forecast_5.9.tgz")
library(forecast)
install.packages("caret")
library(forecast)
if(!require(installr)) {
+ install.packages("installr"); require(installr)}
updateR()
library(installr)
updateR()
updateR()
library(installr)
updateR()
library(forecast)
library(forecast)
library(ggplot2)
require(ggplot2)
install.packages("ggplot2")
install.packages("Quandl")
library(ggplot2)
library(Quandl)
Quandl.api_key("YBwvjvgzsT2HBC3beQVv")
library(tidyr)
install.packages("tidyr")
library(tidyr)
install.packages("dplyr")
install.packages("gridExtra")
install.packages("forecast")
library(dplyr)
library(gridExtra)
library(forecast)
today=as.Date(Sys.Date())
last_year=as.character(today-(365*5))
today=as.character(today)
fin_data=Quandl("EOD/VIG", start_date=last_year, end_date=today)
head(fin_data)
tail(fin_data)
summary(fin_data)
fin_data$dummy=1:nrow(fin_data)
lm_fit=lm(data=fin_data,Open~dummy)
fin_data$lm_pred=predict(lm_fit)
fin_data$diff=c(0,diff(fin_data$Open))
Price_plot=ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=Open),color="red")+
geom_smooth(aes(x=Date,y=Open),color="blue")+
geom_line(aes(x=Date,y=lm_pred),color="black")
if (any(names(fin_data)=="Dividend")) {
Dividend_plot= ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=Dividend),color="green")
grid.arrange(Price_plot, Dividend_plot, ncol = 1)
} else {
Price_plot
}
Diff_plot=ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=diff))+
ylab("First Difference")
Diff_plot
plot.df=fourier_smoother(lm_fit$residuals,Threshold=1,heur="Amplitude")
plot.df=tbl_df(plot.df)
plot.df$X.hold[(round(nrow(plot.df))/2):(nrow(plot.df)+1)]=0
plot.df$X.hold=Mod(plot.df$X.hold)
plot.df=fourier_smoother(lm_fit$residuals,Threshold=1,heur="Amplitude")
plot.df=tbl_df(plot.df)
plot.df$X.hold[(round(nrow(plot.df))/2):(nrow(plot.df)+1)]=0
nrow(plot.df))/2
[(round(nrow(plot.df))/2):(nrow(plot.df)+1)]
(round(nrow(plot.df))/2):(nrow(plot.df)+1)
nrow(plot.df)
nrow(plot.df))/2
plot.df$X.hold[(round(nrow(plot.df)/2)):(nrow(plot.df)+1)]=0
plot.df$X.hold[(round(nrow(plot.df)/2)):nrow(plot.df)]=0
plot.df$X.hold=Mod(plot.df$X.hold)
Frequency_plot=ggplot(plot.df[0:(nrow(plot.df)/2),])+theme_bw()+
geom_line(aes(x=x,y=X.hold))+
ylab("Amplitude")+xlab("Frequency")
Frequency_plot
plot.df=plot.df %>% arrange(desc(X.hold))
plot.df$dummy=1:nrow(plot.df)
plot.df$Amp_PCT=round(cumsum(plot.df$X.hold)/sum(plot.df$X.hold),3)
Cum_PCT_plot=ggplot(plot.df[0:(nrow(plot.df)/2),])+theme_bw()+geom_line(aes(x=dummy,y=Amp_PCT))+
xlab("Highest Amplitudes")+ylab("Cumulative Amplitude Percent")
Cum_PCT_plot
plot.df2=fourier_smoother(lm_fit$residuals,Threshold=98,heur="Amplitude")
plot.df2$sim_data=plot.df2$sim_data+fin_data$lm_pred
plot.df2$clean=plot.df2$clean+fin_data$lm_pred
plot.df2$x=nrow(plot.df2)-plot.df2$x+1
Smoothed_plot=ggplot(plot.df2)+theme_bw()+
geom_line(aes(x=x,y=sim_data))+
geom_line(aes(x=x,y=clean),color="blue",size=1.5)+
ylab("Simulated Data")+xlab("Time")
Smoothed_plot
acf(fin_data$Open)
pacf(fin_data$Open)
acf(lm_fit$residuals)
acf(diff(fin_data$Open))
stl_obj=stl(ts(fin_data$Open, frequency = 12),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
arima_model=auto.arima(fin_data$Open)
summary(arima_model)
plot(forecast(arima_model))
View(fin_data)
fin_data=tbl_df(Quandl("EOD/VIG", start_date=last_year, end_date=today))
fin_data=fin_data %>% arrange(desc(Date))
View(fin_data)
fin_data=fin_data %>% arrange(desc(Date))
View(fin_data)
fin_data=tbl_df(Quandl("EOD/VIG", start_date=last_year, end_date=today))
fin_data$Date=as.Date(fin_data$Date)
View(fin_data)
fin_data=fin_data %>% arrange(desc(Date))
View(fin_data)
fin_data=fin_data %>% arrange(Date)
View(fin_data)
fin_data=tbl_df(Quandl("EOD/VIG", start_date=last_year, end_date=today))
fin_data=fin_data %>% arrange(Date)
View(fin_data)
summary(fin_data)
fin_data$dummy=1:nrow(fin_data)
lm_fit=lm(data=fin_data,Open~dummy)
fin_data$lm_pred=predict(lm_fit)
fin_data$diff=c(0,diff(fin_data$Open))
Price_plot=ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=Open),color="red")+
geom_smooth(aes(x=Date,y=Open),color="blue")+
geom_line(aes(x=Date,y=lm_pred),color="black")
if (any(names(fin_data)=="Dividend")) {
Dividend_plot= ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=Dividend),color="green")
grid.arrange(Price_plot, Dividend_plot, ncol = 1)
} else {
Price_plot
}
Diff_plot=ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=diff))+
ylab("First Difference")
Diff_plot
plot.df=fourier_smoother(lm_fit$residuals,Threshold=1,heur="Amplitude")
plot.df=tbl_df(plot.df)
plot.df$X.hold[(round(nrow(plot.df)/2)):nrow(plot.df)]=0
plot.df$X.hold=Mod(plot.df$X.hold)
Frequency_plot=ggplot(plot.df[0:(nrow(plot.df)/2),])+theme_bw()+
geom_line(aes(x=x,y=X.hold))+
ylab("Amplitude")+xlab("Frequency")
Frequency_plot
plot.df=plot.df %>% arrange(desc(X.hold))
plot.df$dummy=1:nrow(plot.df)
plot.df$Amp_PCT=round(cumsum(plot.df$X.hold)/sum(plot.df$X.hold),3)
Cum_PCT_plot=ggplot(plot.df[0:(nrow(plot.df)/2),])+theme_bw()+geom_line(aes(x=dummy,y=Amp_PCT))+
xlab("Highest Amplitudes")+ylab("Cumulative Amplitude Percent")
Cum_PCT_plot
plot.df2=fourier_smoother(lm_fit$residuals,Threshold=98,heur="Amplitude")
plot.df2$sim_data=plot.df2$sim_data+fin_data$lm_pred
plot.df2$clean=plot.df2$clean+fin_data$lm_pred
Smoothed_plot=ggplot(plot.df2)+theme_bw()+
geom_line(aes(x=x,y=sim_data))+
geom_line(aes(x=x,y=clean),color="blue",size=1.5)+
ylab("Simulated Data")+xlab("Time")
Smoothed_plot
acf(fin_data$Open)
pacf(fin_data$Open)
acf(lm_fit$residuals)
acf(diff(fin_data$Open))
stl_obj=stl(ts(fin_data$Open, frequency = 12),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
stl_obj=stl(ts(fin_data$Open, frequency = 5),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
stl_obj=stl(ts(fin_data$Open, frequency = 20),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
stl_obj=stl(ts(fin_data$Open, frequency = 12*5),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
stl_obj=stl(ts(fin_data$Open, frequency = 12*6),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
arima_model=auto.arima(fin_data$Open)
summary(arima_model)
plot(forecast(arima_model))
r
plot(forecast(arima_model))
fcast=forecast(arima_model)
plot(fcast)
str(fcast)
fin_data=tbl_df(Quandl("EOD/CUBA", start_date=last_year, end_date=today))
fin_data=fin_data %>% arrange(Date)
summary(fin_data)
fin_data$dummy=1:nrow(fin_data)
lm_fit=lm(data=fin_data,Open~dummy)
fin_data$lm_pred=predict(lm_fit)
fin_data$diff=c(0,diff(fin_data$Open))
Price_plot=ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=Open),color="red")+
geom_smooth(aes(x=Date,y=Open),color="blue")+
geom_line(aes(x=Date,y=lm_pred),color="black")
if (any(names(fin_data)=="Dividend")) {
Dividend_plot= ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=Dividend),color="green")
grid.arrange(Price_plot, Dividend_plot, ncol = 1)
} else {
Price_plot
}
Diff_plot=ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=diff))+
ylab("First Difference")
Diff_plot
plot.df=fourier_smoother(lm_fit$residuals,Threshold=1,heur="Amplitude")
plot.df=fourier_smoother(lm_fit$residuals,Threshold=1,heur="Amplitude")
plot.df=tbl_df(plot.df)
plot.df$X.hold[(round(nrow(plot.df)/2)):nrow(plot.df)]=0
plot.df$X.hold=Mod(plot.df$X.hold)
Frequency_plot=ggplot(plot.df[0:(nrow(plot.df)/2),])+theme_bw()+
geom_line(aes(x=x,y=X.hold))+
ylab("Amplitude")+xlab("Frequency")
Frequency_plot
plot.df=plot.df %>% arrange(desc(X.hold))
plot.df$dummy=1:nrow(plot.df)
plot.df$Amp_PCT=round(cumsum(plot.df$X.hold)/sum(plot.df$X.hold),3)
Cum_PCT_plot=ggplot(plot.df[0:(nrow(plot.df)/2),])+theme_bw()+geom_line(aes(x=dummy,y=Amp_PCT))+
xlab("Highest Amplitudes")+ylab("Cumulative Amplitude Percent")
Cum_PCT_plot
plot.df2=fourier_smoother(lm_fit$residuals,Threshold=98,heur="Amplitude")
plot.df2$sim_data=plot.df2$sim_data+fin_data$lm_pred
plot.df2$clean=plot.df2$clean+fin_data$lm_pred
Smoothed_plot=ggplot(plot.df2)+theme_bw()+
geom_line(aes(x=x,y=sim_data))+
geom_line(aes(x=x,y=clean),color="blue",size=1.5)+
ylab("Simulated Data")+xlab("Time")
Smoothed_plot
acf(fin_data$Open)
pacf(fin_data$Open)
acf(lm_fit$residuals)
acf(diff(fin_data$Open))
stl_obj=stl(ts(fin_data$Open, frequency = 12*6),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
arima_model=auto.arima(fin_data$Open)
summary(arima_model)
fcast=forecast(arima_model)
plot(fcast)
library(ggplot2)
library(Quandl)
Quandl.api_key("YBwvjvgzsT2HBC3beQVv")
library(tidyr)
library(dplyr)
library(gridExtra)
library(forecast)
today=as.Date(Sys.Date())
last_year=as.character(today-(365*5))
today=as.character(today)
fin_data=tbl_df(Quandl("EOD/LMLP", start_date=last_year, end_date=today))
fin_data=fin_data %>% arrange(Date)
summary(fin_data)
fin_data$dummy=1:nrow(fin_data)
lm_fit=lm(data=fin_data,Open~dummy)
fin_data$lm_pred=predict(lm_fit)
fin_data$diff=c(0,diff(fin_data$Open))
Price_plot=ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=Open),color="red")+
geom_smooth(aes(x=Date,y=Open),color="blue")+
geom_line(aes(x=Date,y=lm_pred),color="black")
if (any(names(fin_data)=="Dividend")) {
Dividend_plot= ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=Dividend),color="green")
grid.arrange(Price_plot, Dividend_plot, ncol = 1)
} else {
Price_plot
}
Diff_plot=ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=diff))+
ylab("First Difference")
Diff_plot
plot.df=fourier_smoother(lm_fit$residuals,Threshold=1,heur="Amplitude")
plot.df=tbl_df(plot.df)
plot.df$X.hold[(round(nrow(plot.df)/2)):nrow(plot.df)]=0
plot.df$X.hold=Mod(plot.df$X.hold)
Frequency_plot=ggplot(plot.df[0:(nrow(plot.df)/2),])+theme_bw()+
geom_line(aes(x=x,y=X.hold))+
ylab("Amplitude")+xlab("Frequency")
Frequency_plot
plot.df=plot.df %>% arrange(desc(X.hold))
plot.df$dummy=1:nrow(plot.df)
plot.df$Amp_PCT=round(cumsum(plot.df$X.hold)/sum(plot.df$X.hold),3)
Cum_PCT_plot=ggplot(plot.df[0:(nrow(plot.df)/2),])+theme_bw()+geom_line(aes(x=dummy,y=Amp_PCT))+
xlab("Highest Amplitudes")+ylab("Cumulative Amplitude Percent")
Cum_PCT_plot
plot.df2=fourier_smoother(lm_fit$residuals,Threshold=98,heur="Amplitude")
plot.df2$sim_data=plot.df2$sim_data+fin_data$lm_pred
plot.df2$clean=plot.df2$clean+fin_data$lm_pred
Smoothed_plot=ggplot(plot.df2)+theme_bw()+
geom_line(aes(x=x,y=sim_data))+
geom_line(aes(x=x,y=clean),color="blue",size=1.5)+
ylab("Simulated Data")+xlab("Time")
Smoothed_plot
plot.df2=fourier_smoother(lm_fit$residuals,Threshold=97,heur="Amplitude")
plot.df2$sim_data=plot.df2$sim_data+fin_data$lm_pred
plot.df2$clean=plot.df2$clean+fin_data$lm_pred
Smoothed_plot=ggplot(plot.df2)+theme_bw()+
geom_line(aes(x=x,y=sim_data))+
geom_line(aes(x=x,y=clean),color="blue",size=1.5)+
ylab("Simulated Data")+xlab("Time")
Smoothed_plot
plot.df2=fourier_smoother(lm_fit$residuals,Threshold=96,heur="Amplitude")
plot.df2$sim_data=plot.df2$sim_data+fin_data$lm_pred
plot.df2$clean=plot.df2$clean+fin_data$lm_pred
Smoothed_plot=ggplot(plot.df2)+theme_bw()+
geom_line(aes(x=x,y=sim_data))+
geom_line(aes(x=x,y=clean),color="blue",size=1.5)+
ylab("Simulated Data")+xlab("Time")
Smoothed_plot
plot.df2=fourier_smoother(lm_fit$residuals,Threshold=95,heur="Amplitude")
plot.df2$sim_data=plot.df2$sim_data+fin_data$lm_pred
plot.df2$clean=plot.df2$clean+fin_data$lm_pred
geom_line(aes(x=x,y=sim_data))+
geom_line(aes(x=x,y=clean),color="blue",size=1.5)+
Smoothed_plot=ggplot(plot.df2)+theme_bw()+
ylab("Simulated Data")+xlab("Time")
Smoothed_plot
acf(fin_data$Open)
pacf(fin_data$Open)
acf(lm_fit$residuals)
acf(diff(fin_data$Open))
stl_obj=stl(ts(fin_data$Open, frequency = 12*6),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
stl_obj=stl(ts(fin_data$Open, frequency = 4),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
stl_obj=stl(ts(fin_data$Open, frequency = 20),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
arima_model=auto.arima(fin_data$Open)
summary(arima_model)
fcast=forecast(arima_model)
plot(fcast)
fin_data=tbl_df(Quandl("EOD/PSEC", start_date=last_year, end_date=today))
fin_data=fin_data %>% arrange(Date)
fin_data$dummy=1:nrow(fin_data)
lm_fit=lm(data=fin_data,Open~dummy)
fin_data$lm_pred=predict(lm_fit)
fin_data$diff=c(0,diff(fin_data$Open))
Price_plot=ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=Open),color="red")+
geom_smooth(aes(x=Date,y=Open),color="blue")+
geom_line(aes(x=Date,y=lm_pred),color="black")
if (any(names(fin_data)=="Dividend")) {
Dividend_plot= ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=Dividend),color="green")
grid.arrange(Price_plot, Dividend_plot, ncol = 1)
} else {
Price_plot
}
Diff_plot=ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=diff))+
ylab("First Difference")
Diff_plot
plot.df=fourier_smoother(lm_fit$residuals,Threshold=1,heur="Amplitude")
plot.df=tbl_df(plot.df)
plot.df$X.hold[(round(nrow(plot.df)/2)):nrow(plot.df)]=0
plot.df$X.hold=Mod(plot.df$X.hold)
fin_data=tbl_df(Quandl("EOD/APU", start_date=last_year, end_date=today))
fin_data=fin_data %>% arrange(Date)
fin_data$dummy=1:nrow(fin_data)
lm_fit=lm(data=fin_data,Open~dummy)
fin_data$lm_pred=predict(lm_fit)
fin_data$diff=c(0,diff(fin_data$Open))
#Make a some simple plots
Price_plot=ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=Open),color="red")+
geom_smooth(aes(x=Date,y=Open),color="blue")+
geom_line(aes(x=Date,y=lm_pred),color="black")
if (any(names(fin_data)=="Dividend")) {
Dividend_plot= ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=Dividend),color="green")
grid.arrange(Price_plot, Dividend_plot, ncol = 1)
} else {
Price_plot
}
Diff_plot=ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=diff))+
ylab("First Difference")
Diff_plot
plot.df=fourier_smoother(lm_fit$residuals,Threshold=1,heur="Amplitude")
plot.df=tbl_df(plot.df)
plot.df$X.hold[(round(nrow(plot.df)/2)):nrow(plot.df)]=0
plot.df$X.hold=Mod(plot.df$X.hold)
Frequency_plot=ggplot(plot.df[0:(nrow(plot.df)/2),])+theme_bw()+
geom_line(aes(x=x,y=X.hold))+
ylab("Amplitude")+xlab("Frequency")
Frequency_plot
plot.df=plot.df %>% arrange(desc(X.hold))
plot.df$dummy=1:nrow(plot.df)
plot.df$Amp_PCT=round(cumsum(plot.df$X.hold)/sum(plot.df$X.hold),3)
Cum_PCT_plot=ggplot(plot.df[0:(nrow(plot.df)/2),])+theme_bw()+geom_line(aes(x=dummy,y=Amp_PCT))+
xlab("Highest Amplitudes")+ylab("Cumulative Amplitude Percent")
Cum_PCT_plot
plot.df2=fourier_smoother(lm_fit$residuals,Threshold=95,heur="Amplitude")
plot.df2$sim_data=plot.df2$sim_data+fin_data$lm_pred
plot.df2$clean=plot.df2$clean+fin_data$lm_pred
Smoothed_plot=ggplot(plot.df2)+theme_bw()+
geom_line(aes(x=x,y=sim_data))+
geom_line(aes(x=x,y=clean),color="blue",size=1.5)+
ylab("Simulated Data")+xlab("Time")
Smoothed_plot
acf(fin_data$Open)
pacf(fin_data$Open)
acf(lm_fit$residuals)
acf(diff(fin_data$Open))
stl_obj=stl(ts(fin_data$Open, frequency = 20),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
stl_obj=stl(ts(fin_data$Open, frequency = 30),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
stl_obj=stl(ts(fin_data$Open, frequency = 40),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
stl_obj=stl(ts(fin_data$Open, frequency = 50),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
stl_obj=stl(ts(fin_data$Open, frequency = 80),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
arima_model=auto.arima(fin_data$Open)
summary(arima_model)
fcast=forecast(arima_model)
plot(fcast)
today=as.Date(Sys.Date())
last_year=as.character(today-(365*10))
today=as.character(today)
#End of the Day US Stock Prices
fin_data=tbl_df(Quandl("EOD/APU", start_date=last_year, end_date=today))
fin_data=fin_data %>% arrange(Date)
fin_data$dummy=1:nrow(fin_data)
lm_fit=lm(data=fin_data,Open~dummy)
fin_data$lm_pred=predict(lm_fit)
fin_data$diff=c(0,diff(fin_data$Open))
#Make a some simple plots
Price_plot=ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=Open),color="red")+
geom_smooth(aes(x=Date,y=Open),color="blue")+
geom_line(aes(x=Date,y=lm_pred),color="black")
if (any(names(fin_data)=="Dividend")) {
Dividend_plot= ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=Dividend),color="green")
grid.arrange(Price_plot, Dividend_plot, ncol = 1)
} else {
Price_plot
}
Diff_plot=ggplot(fin_data)+theme_bw()+
geom_line(aes(x=Date,y=diff))+
ylab("First Difference")
Diff_plot
#Fourier Exploration
plot.df=fourier_smoother(lm_fit$residuals,Threshold=1,heur="Amplitude")
plot.df=tbl_df(plot.df)
plot.df$X.hold[(round(nrow(plot.df)/2)):nrow(plot.df)]=0
plot.df$X.hold=Mod(plot.df$X.hold)
Frequency_plot=ggplot(plot.df[0:(nrow(plot.df)/2),])+theme_bw()+
geom_line(aes(x=x,y=X.hold))+
ylab("Amplitude")+xlab("Frequency")
Frequency_plot
plot.df=plot.df %>% arrange(desc(X.hold))
plot.df$dummy=1:nrow(plot.df)
plot.df$Amp_PCT=round(cumsum(plot.df$X.hold)/sum(plot.df$X.hold),3)
Cum_PCT_plot=ggplot(plot.df[0:(nrow(plot.df)/2),])+theme_bw()+geom_line(aes(x=dummy,y=Amp_PCT))+
xlab("Highest Amplitudes")+ylab("Cumulative Amplitude Percent")
Cum_PCT_plot
# thresh=100*(1-max(which(plot.df$Amp_PCT<.5))/(nrow(plot.df)/2))
plot.df2=fourier_smoother(lm_fit$residuals,Threshold=95,heur="Amplitude")
plot.df2$sim_data=plot.df2$sim_data+fin_data$lm_pred
plot.df2$clean=plot.df2$clean+fin_data$lm_pred
Smoothed_plot=ggplot(plot.df2)+theme_bw()+
geom_line(aes(x=x,y=sim_data))+
geom_line(aes(x=x,y=clean),color="blue",size=1.5)+
ylab("Simulated Data")+xlab("Time")
Smoothed_plot
#Autocorrelation
acf(fin_data$Open)
pacf(fin_data$Open)
acf(lm_fit$residuals)
acf(diff(fin_data$Open))
#Seasonal Decomposition
stl_obj=stl(ts(fin_data$Open, frequency = 80),t.window=15,s.window="periodic",robust=TRUE)
plot(stl_obj)
#Arima and forecasting
arima_model=auto.arima(fin_data$Open)
summary(arima_model)
fcast=forecast(arima_model)
plot(fcast)
